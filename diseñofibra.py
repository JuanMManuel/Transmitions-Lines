# -*- coding: utf-8 -*-
"""DiseñoFibra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IPyxLi_3s7b4CXCuAEXZPm6iJQ5Plpud
"""

import numpy as np

#Transmisor:
bps = 2.5e9 
potTx = 28 
Tb = 1/bps 
lamda = 1550e-9 
c = 3e8 
chirp = -3
chirp= float(chirp)
alfaE = 0.0006 

#Amplificador:
potAmplificador = 35 
senAmplificador = -18  
# valores fibra compensadora:
DC = (-120*1e-12)/(1e-9*1e3)  
aCompensadora = 0.35/1e3
distancia = 618910000 
DE = (18*1e-12)/(1e-9*1e3) 
beta2E = (-1*(lamda**2)*DE)/(2*np.pi*c)
beta2C = (-1*(lamda**2)*DC)/(2*np.pi*c)

To = Tb/4 
Tz = Tb/2
j1 = beta2E/(To**2)
j2 = Tz/To
A = (chirp*j1)**2 +(j1)**2
B = 2*chirp*j1
C = 1-(j2)**2
z1 = (-B+np.sqrt(B**2-4*A*C))/(2*A)
z2 = (-B-np.sqrt(B**2-4*A*C))/(2*A)
j22 = To/Tz
j21 = beta2C/(Tz**2)
A2 = (chirp*j21)**2 + (j21)**2
B2 = 2*chirp*j21
C2 = 1-(j22)**2
LFC = (-B2+np.sqrt(B2**2-4*A2*C2))/(2*A2)
z22 = (-B2-np.sqrt(B2**2-4*A2*C2))/(2*A2)


DFE = (To**2)/(np.abs(beta2E))
Ldfd = (Tz**2)/(np.abs(beta2C))
#tramos 
numTramos = distancia/z1

#Presupuesto de potencia
z1n = 60000
DA = (potAmplificador -senAmplificador-alfaE*(60000))/aCompensadora
u = potAmplificador -z1n*alfaE-DA*aCompensadora




print("longitud máxima por dispersión en la fibra Estandar:", DFE, "Metros")
print("Longitud de la fibra compensadora:", LFC, "Metros")
print("Los amplificadores se deben de poner de acuerdo al presupuesto de enlace cada:", DA, "Metros")
print("El numero de segmentos requeridos para cubrir la distancia de Bogota a Santiago de Chile es de:", numTramos)
print("La sistancia entre Bogota y Santiago de Chile es:", distancia, "Metros")